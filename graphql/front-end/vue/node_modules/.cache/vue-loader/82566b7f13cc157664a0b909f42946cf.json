{"remainingRequest":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/src/components/Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/src/components/Menu.vue","mtime":1651901124835},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/cache-loader/dist/cjs.js","mtime":1651720830943},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/babel-loader/lib/index.js","mtime":1651720831551},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/cache-loader/dist/cjs.js","mtime":1651720830943},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/vue-loader/lib/index.js","mtime":1651720831643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpjb25zdCBxdWVyaWVzID0gcmVxdWlyZSgnLi4vLi4vbGlicmFyaWVzL3F1ZXJpZXMnKQpjb25zdCBzdWJzY3JpcHRpb25zID0gcmVxdWlyZSgnLi4vLi4vbGlicmFyaWVzL3N1YnNjcmlwdGlvbnMnKQpjb25zdCBtdXRhdGlvbnMgPSByZXF1aXJlKCcuLi8uLi9saWJyYXJpZXMvbXV0YXRpb25zJykKCiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ01lbnUnLAogICAgZGF0YTogKCkgPT4gKHsKICAgICAgbWVzc2FnZTogJycsCiAgICAgIGhlYWRlcnM6IFsKICAgICAgICB7IHRleHQ6ICdOYW1lJywgdmFsdWU6ICduYW1lJyB9LAogICAgICAgIHsgdGV4dDogJ0Rlc2NyaXB0aW9uJywgdmFsdWU6ICdkZXNjcmlwdGlvbicgfSwKICAgICAgICB7IHRleHQ6ICdRdWFudGl0eScsIHZhbHVlOiAncXVhbnRpdHknIH0sCiAgICAgICAgeyB0ZXh0OiAnU2lkZXMnLCB2YWx1ZTogJ3NpZGVzJ30sCiAgICAgICAgeyB0ZXh0OiAnQWN0aW9ucycsIHNvcnRhYmxlOiBmYWxzZX0KICAgICAgXSwKICAgICAgZm9vZExpc3Q6IFtdLAogICAgICBsb2FkaW5nOiBudWxsCiAgICB9KSwKICAgIG1ldGhvZHM6IHsKICAgICAgYXN5bmMgR2V0RGF0YSgpewogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuJGFwb2xsbykKICAgICAgICAvLyBjb25zdCByZXMgPSBhd2FpdCB0aGlzLiRhcG9sbG8ucXVlcmllcy5mb29kCiAgICAgICAgLy8gdGhpcy5mb29kTGlzdCA9IHJlcy5kYXRhLmZvb2Q7CiAgICAgIH0sCiAgICAgIGFzeW5jIGJ1eSgpewogICAgICAgICAgYXdhaXQgdGhpcy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICAgIC8vIFF1ZXJ5CiAgICAgICAgICAgIG11dGF0aW9uOiBtdXRhdGlvbnMuYnV5Rm9vZAogICAgICB9KQogICAgfQogICAgfSwKICAgIGFwb2xsbzogewogICAgICBmb29kOiB7CiAgICAgICAgcXVlcnk6IHF1ZXJpZXMuZ2V0QWxsRm9vZCwKICAgICAgICAvLyBtYW51YWw6IGZhbHNlLAogICAgICAgIHJlc3VsdCAoe2RhdGEsIGxvYWRpbmd9KSB7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhgQVBPTExPIEZPT0QgUVVFUlkke0pTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDEpfSwgJHtsb2FkaW5nfSwgJHtuZXR3b3JrU3RhdHVzfWApOwogICAgICAgICAgdGhpcy5sb2FkaW5nID0gbG9hZGluZwogICAgICAgICAgdGhpcy5mb29kTGlzdCA9IGRhdGEuZm9vZDsKICAgICAgICB9LAogICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgc3Vic2NyaWJlVG9Nb3JlOiB7CiAgICAgICAgICBkb2N1bWVudDogc3Vic2NyaXB0aW9ucy5mb29kUHVyY2hhc2VkLAogICAgICAgICAgdXBkYXRlUXVlcnk6IChwcmV2aW91c0RhdGEsIHtzdWJzY3JpcHRpb25EYXRhfSkgPT4gewogICAgICAgICAgICAvLyBHZXQgdGhlIGluZGV4IG9mIHRoZSBpdGVtIHRvIHVwZGF0ZQogICAgICAgICAgICBjb25zdCBpbmRleE9mSXRlbVRvVXBkYXRlID0gcHJldmlvdXNEYXRhLmZvb2QuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gc3Vic2NyaXB0aW9uRGF0YS5kYXRhLmZvb2RQdXJjaGFzZWQuaWQpCiAgICAgICAgICAgIC8vIFVzZSB0aGUgaW5kZXggdG8gbW9kaWZ5IHRoZSBpdGVtIGRpcmVjdGx5IGFuZCB1cGRhdGUgdGhlIHF1YW50aXR5CiAgICAgICAgICAgIHByZXZpb3VzRGF0YS5mb29kW2luZGV4T2ZJdGVtVG9VcGRhdGVdLnF1YW50aXR5ID0gc3Vic2NyaXB0aW9uRGF0YS5kYXRhLmZvb2RQdXJjaGFzZWQucXVhbnRpdHk7CiAgICAgICAgICAgIC8vIHJldHVybiB7IGZvb2Q6IFsuLi5wcmV2aW91c0RhdGEsIC4uLnN1YnNjcmlwdGlvbkRhdGEuZGF0YS5mb29kUHVyY2hhc2VkXSB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogIH0K"},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Menu.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"foodList\"\n      class=\"elevation-1\"\n      :loading=\"loading\"\n    >\n    <template v-slot:[`item.sides`]=\"{ item }\">\n      <div v-for=\"(side, index) in item.sides\" :key=\"index\">\n        <td>{{ side.name }}</td>\n      </div>\n    </template>\n\n    <!-- ACTIONS -->\n    <template v-slot:[`item.actions`]=\"{ item }\">\n      <v-icon\n        small\n        class=\"mr-2\"\n        @click=\"BuyFood(item.id)\"\n      >\n        mdi-pencil\n      </v-icon>\n      <i class=\"fa-solid fa-user\"></i>\n\n    </template>\n    </v-data-table>\n    <!-- <v-btn @click=\"GetData()\">GET</v-btn> -->\n    <!-- <v-btn @click=\"buy\">BuyFood</v-btn> -->\n    <!-- <v-snackbar v-model=\"snackbar\" :timeout=\"3000\"></v-snackbar> -->\n  </v-container>\n</template>\n\n<script>\n\nconst queries = require('../../libraries/queries')\nconst subscriptions = require('../../libraries/subscriptions')\nconst mutations = require('../../libraries/mutations')\n\n  export default {\n    name: 'Menu',\n    data: () => ({\n      message: '',\n      headers: [\n        { text: 'Name', value: 'name' },\n        { text: 'Description', value: 'description' },\n        { text: 'Quantity', value: 'quantity' },\n        { text: 'Sides', value: 'sides'},\n        { text: 'Actions', sortable: false}\n      ],\n      foodList: [],\n      loading: null\n    }),\n    methods: {\n      async GetData(){\n        // console.log(this.$apollo)\n        // const res = await this.$apollo.queries.food\n        // this.foodList = res.data.food;\n      },\n      async buy(){\n          await this.$apollo.mutate({\n            // Query\n            mutation: mutations.buyFood\n      })\n    }\n    },\n    apollo: {\n      food: {\n        query: queries.getAllFood,\n        // manual: false,\n        result ({data, loading}) {\n          // console.log(`APOLLO FOOD QUERY${JSON.stringify(data, null, 1)}, ${loading}, ${networkStatus}`);\n          this.loading = loading\n          this.foodList = data.food;\n        },\n        // -----------------\n        subscribeToMore: {\n          document: subscriptions.foodPurchased,\n          updateQuery: (previousData, {subscriptionData}) => {\n            // Get the index of the item to update\n            const indexOfItemToUpdate = previousData.food.findIndex(item => item.id === subscriptionData.data.foodPurchased.id)\n            // Use the index to modify the item directly and update the quantity\n            previousData.food[indexOfItemToUpdate].quantity = subscriptionData.data.foodPurchased.quantity;\n            // return { food: [...previousData, ...subscriptionData.data.foodPurchased] }\n          }\n        }\n      }\n    },\n  }\n</script>\n"]}]}