{"remainingRequest":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/src/components/Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/src/components/Menu.vue","mtime":1651901364396},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/cache-loader/dist/cjs.js","mtime":1651720830943},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/babel-loader/lib/index.js","mtime":1651720831551},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/cache-loader/dist/cjs.js","mtime":1651720830943},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/vue-loader/lib/index.js","mtime":1651720831643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpjb25zdCBxdWVyaWVzID0gcmVxdWlyZSgnLi4vLi4vbGlicmFyaWVzL3F1ZXJpZXMnKQpjb25zdCBzdWJzY3JpcHRpb25zID0gcmVxdWlyZSgnLi4vLi4vbGlicmFyaWVzL3N1YnNjcmlwdGlvbnMnKQpjb25zdCBtdXRhdGlvbnMgPSByZXF1aXJlKCcuLi8uLi9saWJyYXJpZXMvbXV0YXRpb25zJykKaW1wb3J0IHsgbWRpQ3VycmVuY3lVc2QgfSBmcm9tICdAbWRpL2pzJzsKICBleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnTWVudScsCiAgICBkYXRhOiAoKSA9PiAoewogICAgICBtZXNzYWdlOiAnJywKICAgICAgaGVhZGVyczogWwogICAgICAgIHsgdGV4dDogJ05hbWUnLCB2YWx1ZTogJ25hbWUnIH0sCiAgICAgICAgeyB0ZXh0OiAnRGVzY3JpcHRpb24nLCB2YWx1ZTogJ2Rlc2NyaXB0aW9uJyB9LAogICAgICAgIHsgdGV4dDogJ1F1YW50aXR5JywgdmFsdWU6ICdxdWFudGl0eScgfSwKICAgICAgICB7IHRleHQ6ICdTaWRlcycsIHZhbHVlOiAnc2lkZXMnfSwKICAgICAgICB7IHRleHQ6ICdBY3Rpb25zJywgc29ydGFibGU6IGZhbHNlfQogICAgICBdLAogICAgICBmb29kTGlzdDogW10sCiAgICAgIGxvYWRpbmc6IG51bGwKICAgIH0pLAogICAgbWV0aG9kczogewogICAgICBhc3luYyBHZXREYXRhKCl7CiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy4kYXBvbGxvKQogICAgICAgIC8vIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJGFwb2xsby5xdWVyaWVzLmZvb2QKICAgICAgICAvLyB0aGlzLmZvb2RMaXN0ID0gcmVzLmRhdGEuZm9vZDsKICAgICAgfSwKICAgICAgYXN5bmMgYnV5KCl7CiAgICAgICAgICBhd2FpdCB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgLy8gUXVlcnkKICAgICAgICAgICAgbXV0YXRpb246IG11dGF0aW9ucy5idXlGb29kCiAgICAgIH0pCiAgICB9CiAgICB9LAogICAgYXBvbGxvOiB7CiAgICAgIGZvb2Q6IHsKICAgICAgICBxdWVyeTogcXVlcmllcy5nZXRBbGxGb29kLAogICAgICAgIC8vIG1hbnVhbDogZmFsc2UsCiAgICAgICAgcmVzdWx0ICh7ZGF0YSwgbG9hZGluZ30pIHsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGBBUE9MTE8gRk9PRCBRVUVSWSR7SlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMSl9LCAke2xvYWRpbmd9LCAke25ldHdvcmtTdGF0dXN9YCk7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBsb2FkaW5nCiAgICAgICAgICB0aGlzLmZvb2RMaXN0ID0gZGF0YS5mb29kOwogICAgICAgIH0sCiAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgICBzdWJzY3JpYmVUb01vcmU6IHsKICAgICAgICAgIGRvY3VtZW50OiBzdWJzY3JpcHRpb25zLmZvb2RQdXJjaGFzZWQsCiAgICAgICAgICB1cGRhdGVRdWVyeTogKHByZXZpb3VzRGF0YSwge3N1YnNjcmlwdGlvbkRhdGF9KSA9PiB7CiAgICAgICAgICAgIC8vIEdldCB0aGUgaW5kZXggb2YgdGhlIGl0ZW0gdG8gdXBkYXRlCiAgICAgICAgICAgIGNvbnN0IGluZGV4T2ZJdGVtVG9VcGRhdGUgPSBwcmV2aW91c0RhdGEuZm9vZC5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLmlkID09PSBzdWJzY3JpcHRpb25EYXRhLmRhdGEuZm9vZFB1cmNoYXNlZC5pZCkKICAgICAgICAgICAgLy8gVXNlIHRoZSBpbmRleCB0byBtb2RpZnkgdGhlIGl0ZW0gZGlyZWN0bHkgYW5kIHVwZGF0ZSB0aGUgcXVhbnRpdHkKICAgICAgICAgICAgcHJldmlvdXNEYXRhLmZvb2RbaW5kZXhPZkl0ZW1Ub1VwZGF0ZV0ucXVhbnRpdHkgPSBzdWJzY3JpcHRpb25EYXRhLmRhdGEuZm9vZFB1cmNoYXNlZC5xdWFudGl0eTsKICAgICAgICAgICAgLy8gcmV0dXJuIHsgZm9vZDogWy4uLnByZXZpb3VzRGF0YSwgLi4uc3Vic2NyaXB0aW9uRGF0YS5kYXRhLmZvb2RQdXJjaGFzZWRdIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgfQo="},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Menu.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"foodList\"\n      class=\"elevation-1\"\n      :loading=\"loading\"\n    >\n    <template v-slot:[`item.sides`]=\"{ item }\">\n      <div v-for=\"(side, index) in item.sides\" :key=\"index\">\n        <td>{{ side.name }}</td>\n      </div>\n    </template>\n\n    <!-- ACTIONS -->\n    <template v-slot:[`item.actions`]=\"{ item }\">\n      <v-icon\n        small\n        class=\"mr-2\"\n        @click=\"BuyFood(item.id)\"\n      >\n        mdiCurrencyUsd\n      </v-icon>\n      <i class=\"mdiCurrencyUsd></i>\n\n    </template>\n    </v-data-table>\n    <!-- <v-btn @click=\"GetData()\">GET</v-btn> -->\n    <!-- <v-btn @click=\"buy\">BuyFood</v-btn> -->\n    <!-- <v-snackbar v-model=\"snackbar\" :timeout=\"3000\"></v-snackbar> -->\n  </v-container>\n</template>\n\n<script>\n\nconst queries = require('../../libraries/queries')\nconst subscriptions = require('../../libraries/subscriptions')\nconst mutations = require('../../libraries/mutations')\nimport { mdiCurrencyUsd } from '@mdi/js';\n  export default {\n    name: 'Menu',\n    data: () => ({\n      message: '',\n      headers: [\n        { text: 'Name', value: 'name' },\n        { text: 'Description', value: 'description' },\n        { text: 'Quantity', value: 'quantity' },\n        { text: 'Sides', value: 'sides'},\n        { text: 'Actions', sortable: false}\n      ],\n      foodList: [],\n      loading: null\n    }),\n    methods: {\n      async GetData(){\n        // console.log(this.$apollo)\n        // const res = await this.$apollo.queries.food\n        // this.foodList = res.data.food;\n      },\n      async buy(){\n          await this.$apollo.mutate({\n            // Query\n            mutation: mutations.buyFood\n      })\n    }\n    },\n    apollo: {\n      food: {\n        query: queries.getAllFood,\n        // manual: false,\n        result ({data, loading}) {\n          // console.log(`APOLLO FOOD QUERY${JSON.stringify(data, null, 1)}, ${loading}, ${networkStatus}`);\n          this.loading = loading\n          this.foodList = data.food;\n        },\n        // -----------------\n        subscribeToMore: {\n          document: subscriptions.foodPurchased,\n          updateQuery: (previousData, {subscriptionData}) => {\n            // Get the index of the item to update\n            const indexOfItemToUpdate = previousData.food.findIndex(item => item.id === subscriptionData.data.foodPurchased.id)\n            // Use the index to modify the item directly and update the quantity\n            previousData.food[indexOfItemToUpdate].quantity = subscriptionData.data.foodPurchased.quantity;\n            // return { food: [...previousData, ...subscriptionData.data.foodPurchased] }\n          }\n        }\n      }\n    },\n  }\n</script>\n"]}]}