{"remainingRequest":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/babel-loader/lib/index.js!/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/src/components/HelloWorld.vue","mtime":1651300316587},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/babel.config.js","mtime":1650079706694},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/cache-loader/dist/cjs.js","mtime":1651720830943},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/babel-loader/lib/index.js","mtime":1651720831551},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/cache-loader/dist/cjs.js","mtime":1651720830943},{"path":"/Users/kahlilbeasley/Desktop/Javascript/graphql_front_end/graphql/node_modules/vue-loader/lib/index.js","mtime":1651720831643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMva2FobGlsYmVhc2xleS9EZXNrdG9wL0phdmFzY3JpcHQvZ3JhcGhxbF9mcm9udF9lbmQvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2thaGxpbGJlYXNsZXkvRGVza3RvcC9KYXZhc2NyaXB0L2dyYXBocWxfZnJvbnRfZW5kL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgcXVlcmllcyA9IHJlcXVpcmUoJy4uLy4uL2xpYnJhcmllcy9xdWVyaWVzJyk7Cgp2YXIgc3Vic2NyaXB0aW9ucyA9IHJlcXVpcmUoJy4uLy4uL2xpYnJhcmllcy9zdWJzY3JpcHRpb25zJyk7Cgp2YXIgbXV0YXRpb25zID0gcmVxdWlyZSgnLi4vLi4vbGlicmFyaWVzL211dGF0aW9ucycpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIZWxsb1dvcmxkJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZTogJycsCiAgICAgIGhlYWRlcnM6IFt7CiAgICAgICAgdGV4dDogJ05hbWUnLAogICAgICAgIHZhbHVlOiAnbmFtZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdEZXNjcmlwdGlvbicsCiAgICAgICAgdmFsdWU6ICdkZXNjcmlwdGlvbicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdRdWFudGl0eScsCiAgICAgICAgdmFsdWU6ICdxdWFudGl0eScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTaWRlcycsCiAgICAgICAgdmFsdWU6ICdzaWRlcycKICAgICAgfV0sCiAgICAgIGZvb2RMaXN0OiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBmb29kQm91Z2h0OiBmdW5jdGlvbiBmb29kQm91Z2h0KCkge30KICB9LAogIG1ldGhvZHM6IHsKICAgIEdldERhdGE6IGZ1bmN0aW9uIEdldERhdGEoKSB7Ly8gY29uc29sZS5sb2codGhpcy4kYXBvbGxvKQogICAgICAvLyBjb25zdCByZXMgPSBhd2FpdCB0aGlzLiRhcG9sbG8ucXVlcmllcy5mb29kCiAgICAgIC8vIHRoaXMuZm9vZExpc3QgPSByZXMuZGF0YS5mb29kOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdGVzdDogZnVuY3Rpb24gdGVzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdET0xMQVJSJywgX3RoaXMuJGFwb2xsbyk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwb2xsby5xdWVyaWVzLmZvb2RQdXJjaGFzZWQ7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1IzMzMzJywgcmVzKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYnV5OiBmdW5jdGlvbiBidXkoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICAvLyBRdWVyeQogICAgICAgICAgICAgICAgICBtdXRhdGlvbjogbXV0YXRpb25zLmJ1eUZvb2QKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGFwb2xsbzogewogICAgZm9vZDogewogICAgICBxdWVyeTogcXVlcmllcy5nZXRBbGxGb29kLAogICAgICAvLyBtYW51YWw6IGZhbHNlLAogICAgICAvLyByZXN1bHQgKHtkYXRhLCBsb2FkaW5nLCBuZXR3b3JrU3RhdHVzfSkgewogICAgICAvLyAgIGNvbnNvbGUubG9nKGBBUE9MTE8gRk9PRCBRVUVSWSR7SlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMSl9LCAke2xvYWRpbmd9LCAke25ldHdvcmtTdGF0dXN9YCk7CiAgICAgIC8vICAgdGhpcy5mb29kTGlzdCA9IGRhdGEuZm9vZDsKICAgICAgLy8gfQogICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLQogICAgICBzdWJzY3JpYmVUb01vcmU6IHsKICAgICAgICBkb2N1bWVudDogc3Vic2NyaXB0aW9ucy5mb29kUHVyY2hhc2VkLAogICAgICAgIHVwZGF0ZVF1ZXJ5OiBmdW5jdGlvbiB1cGRhdGVRdWVyeShwcmV2aW91c0RhdGEsIF9yZWYpIHsKICAgICAgICAgIHZhciBzdWJzY3JpcHRpb25EYXRhID0gX3JlZi5zdWJzY3JpcHRpb25EYXRhOwogICAgICAgICAgY29uc29sZS5sb2coIm9rb2tva29rbyIsIHByZXZpb3VzRGF0YSk7CiAgICAgICAgICBjb25zb2xlLmxvZygiPz8/Pz8iLCBzdWJzY3JpcHRpb25EYXRhKTsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGZvb2Q6IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocHJldmlvdXNEYXRhKSwgX3RvQ29uc3VtYWJsZUFycmF5KHN1YnNjcmlwdGlvbkRhdGEuZGF0YS5mb29kUHVyY2hhc2VkKSkKICAgICAgICAgIH07CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;AACA;;AACA;;AAEA;EACAA,kBADA;EAEAC;IAAA;MACAC,WADA;MAEAC,UACA;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,EAGA;QAAAD;QAAAC;MAAA,CAHA,EAIA;QAAAD;QAAAC;MAAA,CAJA,CAFA;MAQAC;IARA;EAAA,CAFA;EAYAC;IACAC,mCAEA;EAHA,CAZA;EAiBAC;IACAC,OADA,qBACA,CACA;MACA;MACA;;MAHA;QAAA;UAAA;YAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CALA;IAMAC,IANA,kBAMA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC;gBADA;gBAAA,OAEA,mCAFA;;cAAA;gBAEAC,GAFA;gBAGAD;;cAHA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIA,CAVA;IAWAE,GAXA,iBAWA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACA;kBACAC;gBAFA,EADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA;EAhBA,CAjBA;EAmCAC;IACAC;MACAC,yBADA;MAEA;MACA;MACA;MACA;MACA;MACA;MACAC;QACAC,qCADA;QAEAC;UAAA;UACAT;UACAA;UACA;YAAAK;UAAA;QACA;MANA;IARA;EADA;AAnCA","names":["name","data","message","headers","text","value","foodList","computed","foodBought","methods","GetData","test","console","res","buy","mutation","apollo","food","query","subscribeToMore","document","updateQuery"],"sourceRoot":"src/components","sources":["HelloWorld.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"food\"\n      class=\"elevation-1\"\n    >\n    <template v-slot:[`item.sides`]=\"{ item }\">\n      <div v-for=\"(side, index) in item.sides\" :key=\"index\">\n        <td>{{ side.name }}</td>\n      </div>\n    </template>\n    </v-data-table>\n    <v-btn @click=\"GetData()\">GET</v-btn>\n    <v-btn @click=\"test()\">Subscribe</v-btn>\n    <v-btn @click=\"buy\">BuyFood</v-btn>\n    <!-- <v-snackbar v-model=\"snackbar\" :timeout=\"3000\"></v-snackbar> -->\n  </v-container>\n</template>\n\n<script>\n\nconst queries = require('../../libraries/queries')\nconst subscriptions = require('../../libraries/subscriptions')\nconst mutations = require('../../libraries/mutations')\n\n  export default {\n    name: 'HelloWorld',\n    data: () => ({\n      message: '',\n      headers: [\n        { text: 'Name', value: 'name' },\n        { text: 'Description', value: 'description' },\n        { text: 'Quantity', value: 'quantity' },\n        { text: 'Sides', value: 'sides'}\n      ],\n      foodList: [],\n    }),\n    computed: {\n      foodBought: () => {\n\n      }\n    },\n    methods: {\n      async GetData(){\n        // console.log(this.$apollo)\n        // const res = await this.$apollo.queries.food\n        // this.foodList = res.data.food;\n      },\n      async test() {\n        console.log('DOLLARR',this.$apollo);\n        const res = await this.$apollo.queries.foodPurchased\n        console.log('R3333',res)\n      },\n      async buy(){\n          await this.$apollo.mutate({\n            // Query\n            mutation: mutations.buyFood\n      })\n    }\n    },\n    apollo: {\n      food: {\n        query: queries.getAllFood,\n        // manual: false,\n        // result ({data, loading, networkStatus}) {\n        //   console.log(`APOLLO FOOD QUERY${JSON.stringify(data, null, 1)}, ${loading}, ${networkStatus}`);\n        //   this.foodList = data.food;\n        // }\n        // -----------------\n        subscribeToMore: {\n          document: subscriptions.foodPurchased,\n          updateQuery: (previousData, {subscriptionData}) => {\n            console.log(\"okokokoko\", previousData);\n            console.log(\"?????\",subscriptionData);\n            return { food: [...previousData, ...subscriptionData.data.foodPurchased] }\n          }\n        }\n      }\n    },\n  }\n</script>\n"]}]}